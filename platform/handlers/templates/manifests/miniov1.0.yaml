apiVersion: v1
kind: Secret
metadata:
  name: {{iid}}
  namespace: {{namespace}}
type: Opaque
stringData:
  accessKey: {{secrets.accessKey}}
  secretKey: {{secrets.secretKey}}

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{iid}}
  namespace: {{namespace}}
spec:
  serviceName: {{iid}}
  replicas: 1
  updateStrategy:
    type: {{statefulSetConfig.strategy}}
    rollingUpdate:
      maxUnavailable: {{statefulSetConfig.rollingUpdate.maxUnavailable}}
      partition: {{statefulSetConfig.rollingUpdate.partition}}
  revisionHistoryLimit: {{statefulSetConfig.revisionHistoryLimit}}
  podManagementPolicy: {{statefulSetConfig.podManagementPolicy}}
  persistentVolumeClaimRetentionPolicy: 
    whenDeleted: Retain
    whenScaled: Retain
  selector:
    matchLabels:
      app: {{iid}}
  template:
    metadata:
      labels:
        app: {{iid}}
    spec:
      containers:
      - name: minio
        image: {{registry.imageUrl}}
        command:
        - /bin/sh
        - -ce
        - |
          /usr/bin/docker-entrypoint.sh minio server /data -S /etc/minio/certs/ --address :9000 --console-address :9001 &
          until (mc alias set myminio http://localhost:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD)
          do
            echo "Waiting for MinIO to be ready..."
            sleep 3
          done
          wait
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
          name: http
          protocol: TCP
        - containerPort: 9001
          name: http-console
          protocol: TCP
        resources:
          requests:
            memory: {{podConfig.memoryRequest}}{{podConfig.memoryRequestType}}
            cpu: {{podConfig.cpuRequest}}{{podConfig.cpuRequestType}}
          limits:
            memory: {{podConfig.memoryLimit}}{{podConfig.memoryLimitType}}
            cpu: {{podConfig.cpuLimit}}{{podConfig.cpuLimitType}}
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: {{iid}}
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: {{iid}}
        livenessProbe:
          httpGet:
            path: /minio/health/live
            port: 9000
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 6
        readinessProbe:
          httpGet:
            path: /minio/health/ready
            port: 9000
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 20
          timeoutSeconds: 6
        volumeMounts:
        - name: data
          mountPath: /data
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: {{storageConfig.size}}{{storageConfig.sizeType}}

---

apiVersion: v1
kind: Service
metadata:
  name: {{iid}}
  namespace: {{namespace}}
spec:
  type: ClusterIP
  ports:
  - port: 9000
    targetPort: 9000
    name: minio
  selector:
    app: {{iid}}

---

apiVersion: v1
kind: Service
metadata:
  name: {{iid}}-headless
  namespace: {{namespace}}
spec:
  ports:
  - port: 9000
    targetPort: 9000
    name: minio
  clusterIP: None
  selector:
    app: {{iid}}

---

apiVersion: v1
kind: Service
metadata:
  name: {{iid}}-console
  namespace: {{namespace}}
spec:
  ports:
  - port: 9001
    targetPort: 9001
    name: minio
  clusterIP: None
  selector:
    app: {{iid}}




