name: Build and Push

on:
  push:
    branches:
      - 'main'
    paths:
      - 'monitor/**'
      - 'platform/**'
      - 'sync/**'
      - 'webhook/**'
      #- 'studio/**'

env:
  # GAR: Google Artifact Registry
  GAR_LOCATION: 'europe-docker.pkg.dev'
  GAR_PROJECT: 'agnost-gitops'
  GAR_NAME: 'images'

jobs:
  get_apps:
    runs-on: ubuntu-latest
    outputs:
      applications: ${{ steps.filter.outputs.changes }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            monitor: 'monitor/**'
            platform: 'platform/**'
            sync: 'sync/**'
            webhook: 'webhook/**'
            #studio: 'studio/**'

  generate_short_sha:
    runs-on: ubuntu-latest
    outputs:
      sha: ${{ steps.short-sha.outputs.sha }}
    steps:
      -
        uses: actions/checkout@v4
      -
        uses: benjlevesque/short-sha@v3.0
        id: short-sha

  build:
    runs-on: ubuntu-latest
    needs: [get_apps, generate_short_sha]
    strategy:
      matrix:
        application: ${{ fromJSON(needs.get_apps.outputs.applications) }}
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to Google Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: '${{ env.GAR_LOCATION }}'
          username: _json_key
          password: '${{ secrets.GOOGLE_CREDENTIALS }}'
      -
        name: Build and Push
        uses: docker/build-push-action@v5
        env:
          DOCKER_REGISTRY: ${{ env.GAR_LOCATION }}/${{ env.GAR_PROJECT }}/${{ env.GAR_NAME }}
        with:
          push: true
          context: ./${{ matrix.application }}
          file: ./${{ matrix.application }}/Dockerfile
          platforms: linux/arm64,linux/amd64
          tags: |
            ${{ env.DOCKER_REGISTRY }}/${{ matrix.application }}:${{ needs.generate_short_sha.outputs.sha }}
            ${{ env.DOCKER_REGISTRY }}/${{ matrix.application }}:latest
