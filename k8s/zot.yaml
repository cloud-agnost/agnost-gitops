apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    meta.helm.sh/release-name: agnost-gitops
    meta.helm.sh/release-namespace: agnost
  creationTimestamp: "2024-07-26T07:28:18Z"
  generation: 1
  labels:
    app.kubernetes.io/managed-by: Helm
  name: zot
  namespace: agnost
  resourceVersion: "45409"
  uid: 2046fd21-d090-407d-bfcf-d5b5f0bc1879
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: zot
  serviceName: zot
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: zot
    spec:
      containers:
      - env:
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: accessKey
              name: minio
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secretKey
              name: minio
        image: ghcr.io/project-zot/zot-linux-amd64:v2.0.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 5
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 6
        name: zot
        ports:
        - containerPort: 5000
          name: zot
          protocol: TCP
        readinessProbe:
          failureThreshold: 5
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 6
        resources: {}
        startupProbe:
          failureThreshold: 5
          httpGet:
            path: /v2/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 6
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/zot
          name: config
        - name: data
          mountPath: /data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: zot
      serviceAccountName: zot
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: zot
        name: config
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi
